buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.2"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
    }
}

ext {
    grailsApps = ['app']
    grailsPlugins = ['plugin']
}

subprojects { project ->
    boolean isGrailsApp = grailsApps.contains(project.name)
    boolean isGrailsPlugin = grailsPlugins.contains(project.name)
    boolean isGrailsProject = isGrailsApp || isGrailsPlugin

    if ( isGrailsProject ) {
        apply plugin:"eclipse"
        apply plugin:"idea"

        if ( isGrailsApp ) {
            apply plugin:"war"
            apply plugin:"org.grails.grails-web"
            apply plugin:"org.grails.grails-gsp"
            apply plugin:"asset-pipeline"
        }

        if ( isGrailsPlugin ) {
            apply plugin:"org.grails.grails-plugin"
            apply plugin:"org.grails.grails-plugin-publish"
        }

        repositories {
            mavenLocal()
            maven { url "https://repo.grails.org/grails/core" }
        }

        dependencies {
            compile "org.springframework.boot:spring-boot-starter-logging"
            compile "org.springframework.boot:spring-boot-autoconfigure"
            compile "org.grails:grails-core"
            console "org.grails:grails-console"
        }

        if ( isGrailsApp ) {
            dependencies {
                compile "org.springframework.boot:spring-boot-starter-actuator"
                compile "org.springframework.boot:spring-boot-starter-tomcat"
                compile "org.grails:grails-dependencies"
                compile "org.grails:grails-web-boot"
                compile "org.grails.plugins:cache"
                compile "org.grails.plugins:scaffolding"
                compile "org.grails.plugins:hibernate5"
                compile "org.hibernate:hibernate-core:5.1.5.Final"
                profile "org.grails.profiles:web"
                runtime "org.glassfish.web:el-impl:2.1.2-b03"
                runtime "com.h2database:h2"
                runtime "org.apache.tomcat:tomcat-jdbc"
                runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.2"
                testCompile "org.grails:grails-gorm-testing-support:1.1.1"
                testCompile "org.grails.plugins:geb"
                testCompile "org.grails:grails-web-testing-support:1.1.1"
                testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
                testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
            }
        }

        if ( isGrailsPlugin ) {
            dependencies {
                profile "org.grails.profiles:plugin"
                provided "org.grails:grails-plugin-services"
                provided "org.grails:grails-plugin-domain-class"
                testCompile "org.grails:grails-gorm-testing-support:1.1.1
            }
        }

        bootRun {
            jvmArgs('-Dspring.output.ansi.enabled=always')
            addResources = true
        }

        if ( isGrailsPlugin ) {
            // enable if you wish to package this plugin as a standalone application
            bootRepackage.enabled = false
            grailsPublish {
                // TODO: Provide values here
                user = 'user'
                key = 'key'
                githubSlug = 'foo/bar'
                license {
                    name = 'Apache-2.0'
                }
                title = "My Plugin"
                desc = "Full plugin description"
                developers = [johndoe:"John Doe"]
                portalUser = ""
                portalPassword = ""
            }
        }
    }

    afterEvaluate {
        if ( isGrailsProject ) {
            assets {
                minifyJs = true
                minifyCss = true
            }
        }
    }
}
